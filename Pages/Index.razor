@page "/"
@inject IJSRuntime JSRuntime
@using VaderERP.Components

<div class="parallax-container">
    <div class="section no-pad-bot">
        <div class="container">
            <br><br>
            <h1 class="header center teal-text text-lighten-2">Parallax Template</h1>
            
            <div class="row center">
                <h5 class="header col s12 light">A modern responsive front-end framework based on Material Design</h5>
            </div>
            
            <div class="row center">
                <a href="secondpage" id="download-button" class="btn-large waves-effect waves-light teal lighten-1">Go Go Second</a>
            </div>
            
            <br><br>
        </div>
    </div>

    
</div> 

<div class="container">
    <div class="section">

      <!--   Icon Section   -->
      <div class="row">
        <div class="col s12 m4">
          <div class="icon-block">
            <h2 class="center brown-text"><i class="material-icons">flash_on</i></h2>
            <h5 class="center">Speeds up development</h5>

            <p class="light">We did most of the heavy lifting for you to provide a default stylings that incorporate our custom components. Additionally, we refined animations and transitions to provide a smoother experience for developers.</p>
          </div>
        </div>

        <div class="col s12 m4">
          <div class="icon-block">
            <h2 class="center brown-text"><i class="material-icons">group</i></h2>
            <h5 class="center">User Experience Focused</h5>

            <p class="light">By utilizing elements and principles of Material Design, we were able to create a framework that incorporates components and animations that provide more feedback to users. Additionally, a single underlying responsive system across all platforms allow for a more unified user experience.</p>
          </div>
        </div>

        <div class="col s12 m4">
          <div class="icon-block">
            <h2 class="center brown-text"><i class="material-icons">settings</i></h2>
            <h5 class="center">Easy to work with</h5>

            <p class="light">We have provided detailed documentation as well as specific code examples to help new users get started. We are also always open to feedback and can answer any questions a user may have about Materialize.</p>
          </div>
        </div>
      </div>

    </div>
  </div>

<ParallaxElement Photo="assets/background2.jpg" TextOnPhoto="An ERP system that you love." />
 
<div class="container">    
    <div class="section">
        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quas voluptatum cumque quibusdam sit asperiores harum tempore deleniti, 
            molestias praesentium ut, ipsum quisquam voluptas doloremque saepe? Impedit exercitationem modi vel iste.</p>
        <ul>
            <li><span>Photo by Samuel Ferrara on <a href="https://unsplash.com/">Unsplash</a></span></li>
            <li><span>Photo by JOHN TOWNER on <a href="https://unsplash.com/">Unsplash</a></span></li>
            <li><span>Photo by Rohit Tandon on <a href="https://unsplash.com/">Unsplash</a></span></li>
        </ul>
    </div>
</div>

<ParallaxElement Photo="assets/background3.jpg" TextOnPhoto="This is very nice." />

<Footer CompanyName="VaderERP" CompanyClaim="Made with love in the Home Office" />


@code {
    [CascadingParameter(Name = "ErrorComponent")]
    protected IErrorComponent ErrorComponent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try 
        {
            // do something
            //await Task.Delay(250);
            await JSRuntime.InvokeVoidAsync("prepareParallax", "./js/init.js");
            //throw new Exception("Something wrong went terribly wrong.");
        }
        catch (Exception e)
        {
            ErrorComponent.ShowError(e.Message, e.StackTrace);
        }
    }
}